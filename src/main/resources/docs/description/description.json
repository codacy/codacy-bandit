[ {
  "patternId" : "B101",
  "title" : "assert_used",
  "description" : "B101: Test for use of assert"
}, {
  "patternId" : "B102",
  "title" : "exec_used",
  "description" : "B102: Test for the use of exec"
}, {
  "patternId" : "B103",
  "title" : "set_bad_file_permissions",
  "description" : "B103: Test for setting permissive file permissions"
}, {
  "patternId" : "B104",
  "title" : "hardcoded_bind_all_interfaces",
  "description" : "B104: Test for binding to all interfaces"
}, {
  "patternId" : "B105",
  "title" : "hardcoded_password_string",
  "description" : "B105: Test for use of hard-coded password strings**"
}, {
  "patternId" : "B106",
  "title" : "hardcoded_password_funcarg",
  "description" : "B106: Test for use of hard-coded password function arguments**"
}, {
  "patternId" : "B107",
  "title" : "hardcoded_password_default",
  "description" : "B107: Test for use of hard-coded password argument defaults**"
}, {
  "patternId" : "B108",
  "title" : "hardcoded_tmp_directory",
  "description" : "B108: Test for insecure usage of tmp file/directory"
}, {
  "patternId" : "B109",
  "title" : "Test for a password based config option not marked secret",
  "description" : "B109: Test for a password based config option not marked secret"
}, {
  "patternId" : "B110",
  "title" : "try_except_pass",
  "description" : "B110: Test for a pass in the except block"
}, {
  "patternId" : "B111",
  "title" : "Test for the use of rootwrap running as root",
  "description" : "B111: Test for the use of rootwrap running as root"
}, {
  "patternId" : "B112",
  "title" : "try_except_continue",
  "description" : "B112: Test for a continue in the except block"
}, {
  "patternId" : "B201",
  "title" : "flask_debug_true",
  "description" : "B201: Test for use of flask app with debug set to true"
}, {
  "patternId" : "B301",
  "title" : "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
  "description" : "B301: pickle"
}, {
  "patternId" : "B302",
  "title" : "Deserialization with the marshal module is possibly dangerous.",
  "description" : "B302: marshal"
}, {
  "patternId" : "B303",
  "title" : "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
  "description" : "B303: md5"
}, {
  "patternId" : "B304",
  "title" : "Use of insecure cipher or cipher mode",
  "description" : "B304 - B305: ciphers and modes"
}, {
  "patternId" : "B305",
  "title" : "Use of insecure cipher or cipher mode",
  "description" : "B304 - B305: ciphers and modes"
}, {
  "patternId" : "B306",
  "title" : "Use of insecure and deprecated function (mktemp).",
  "description" : "B306: mktemp\\_q"
}, {
  "patternId" : "B307",
  "title" : "Use of possibly insecure function - consider using safer ast.literal_eval.",
  "description" : "B307: eval"
}, {
  "patternId" : "B308",
  "title" : "Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.",
  "description" : "B308: mark\\_safe"
}, {
  "patternId" : "B309",
  "title" : "Use of HTTPSConnection on older versions of Python prior to 2.7.9 and 3.4.3 do not provide security, see https://wiki.openstack.org/wiki/OSSN/OSSN-0033",
  "description" : "B309: httpsconnection"
}, {
  "patternId" : "B310",
  "title" : "Audit url open for permitted schemes",
  "description" : "B310: urllib\\_urlopen"
}, {
  "patternId" : "B311",
  "title" : "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
  "description" : "B311: random"
}, {
  "patternId" : "B312",
  "title" : "Telnet-related functions are being called",
  "description" : "B312: telnetlib"
}, {
  "patternId" : "B313",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B314",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B315",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B316",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B317",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B318",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B319",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B320",
  "title" : "Using various XLM methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B313 - B320: XML"
}, {
  "patternId" : "B321",
  "title" : "FTP-related functions are being called",
  "description" : "B321: ftplib"
}, {
  "patternId" : "B322",
  "title" : "The input method in Python 2 will read from standard input, evaluate and run the resulting string as python source code",
  "description" : "B322: input"
}, {
  "patternId" : "B323",
  "title" : "By default, Python will create a secure, verified ssl context for use in such classes as HTTPSConnection",
  "description" : "B323: unverified\\_context"
}, {
  "patternId" : "B325",
  "title" : "Use of os.tempnam() and os.tmpnam() is vulnerable to symlink attacks",
  "description" : "B325: tempnam"
}, {
  "patternId" : "B401",
  "title" : "A telnet-related module is being imported",
  "description" : "B401: import\\_telnetlib"
}, {
  "patternId" : "B402",
  "title" : "A FTP-related module is being imported",
  "description" : "B402: import\\_ftplib"
}, {
  "patternId" : "B403",
  "title" : "Consider possible security implications associated with these modules.",
  "description" : "B403: import\\_pickle"
}, {
  "patternId" : "B404",
  "title" : "Consider possible security implications associated with these modules.",
  "description" : "B404: import\\_subprocess"
}, {
  "patternId" : "B405",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B405: import\\_xml\\_etree"
}, {
  "patternId" : "B406",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B406: import\\_xml\\_sax"
}, {
  "patternId" : "B407",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B407: import\\_xml\\_expat"
}, {
  "patternId" : "B408",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B408: import\\_xml\\_minidom"
}, {
  "patternId" : "B409",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B409: import\\_xml\\_pulldom"
}, {
  "patternId" : "B410",
  "title" : "Using various methods to parse untrusted XML data is known to be vulnerable to XML attacks",
  "description" : "B410: import\\_lxml"
}, {
  "patternId" : "B411",
  "title" : "XMLRPC is particularly dangerous as it is also concerned with communicating data over a network",
  "description" : "B411: import\\_xmlrpclib"
}, {
  "patternId" : "B412",
  "title" : "httpoxy is a set of vulnerabilities that affect application code running in CGI, or CGI-like environments",
  "description" : "B412: import\\_httpoxy"
}, {
  "patternId" : "B413",
  "title" : "pycrypto library is known to have publicly disclosed buffer overflow vulnerability https://github.com/dlitz/pycrypto/issues/176",
  "description" : "B413: import\\_pycrypto"
}, {
  "patternId" : "B414",
  "title" : "This import blacklist has been removed",
  "description" : "B414: import\\_pycryptodome"
}, {
  "patternId" : "B501",
  "title" : "request_with_no_cert_validation",
  "description" : "B501: Test for missing certificate validation"
}, {
  "patternId" : "B502",
  "title" : "ssl_with_bad_version",
  "description" : "B502: Test for SSL use with bad version used**"
}, {
  "patternId" : "B503",
  "title" : "ssl_with_bad_defaults",
  "description" : "B503: Test for SSL use with bad defaults specified**"
}, {
  "patternId" : "B504",
  "title" : "ssl_with_no_version",
  "description" : "B504: Test for SSL use with no version specified**"
}, {
  "patternId" : "B505",
  "title" : "weak_cryptographic_key",
  "description" : "B505: Test for weak cryptographic key use"
}, {
  "patternId" : "B506",
  "title" : "yaml_load",
  "description" : "B506: Test for use of yaml load"
}, {
  "patternId" : "B507",
  "title" : "ssh_no_host_key_verification",
  "description" : "B507: Test for missing host key validation"
}, {
  "patternId" : "B601",
  "title" : "paramiko_calls",
  "description" : "B601: Test for shell injection within Paramiko"
}, {
  "patternId" : "B602",
  "title" : "subprocess_popen_with_shell_equals_true",
  "description" : "B602: Test for use of popen with shell equals true**"
}, {
  "patternId" : "B603",
  "title" : "subprocess_without_shell_equals_true",
  "description" : "B603: Test for use of subprocess with shell equals true**"
}, {
  "patternId" : "B604",
  "title" : "any_other_function_with_shell_equals_true",
  "description" : "B604: Test for any function with shell equals true**"
}, {
  "patternId" : "B605",
  "title" : "start_process_with_a_shell",
  "description" : "B605: Test for starting a process with a shell**"
}, {
  "patternId" : "B606",
  "title" : "start_process_with_no_shell",
  "description" : "B606: Test for starting a process with no shell**"
}, {
  "patternId" : "B607",
  "title" : "start_process_with_partial_path",
  "description" : "B607: Test for starting a process with a partial path**"
}, {
  "patternId" : "B608",
  "title" : "hardcoded_sql_expressions",
  "description" : "B608: Test for SQL injection"
}, {
  "patternId" : "B609",
  "title" : "linux_commands_wildcard_injection",
  "description" : "B609: Test for use of wildcard injection"
}, {
  "patternId" : "B610",
  "title" : "django_extra_used",
  "description" : "B610: django\\_extra\\_used"
}, {
  "patternId" : "B611",
  "title" : "django_rawsql_used",
  "description" : "B611: django\\_rawsql\\_used"
}, {
  "patternId" : "B701",
  "title" : "jinja2_autoescape_false",
  "description" : "B701: Test for not auto escaping in jinja2"
}, {
  "patternId" : "B702",
  "title" : "use_of_mako_templates",
  "description" : "B702: Test for use of mako templates"
}, {
  "patternId" : "B703",
  "title" : "django_mark_safe",
  "description" : "B703: django\\_mark\\_safe"
} ]
